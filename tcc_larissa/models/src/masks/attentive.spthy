/*
   
      ATTENTIVE HUMAN MASK
      
      - We consider this to be the attentive mask of actions that can be taken by the user U;
      - For this, the user should be honest, so we consider it has an account in the MNO;
      - He will only perform action that the system suports and wants, never making mistakes;
        
      Eq() is used here to controll which actor can perform this mask and confirms if is always the same user

*/



rule UserAttentive[colour=#AC8BDB]:
    [
        !HumanMask($M, ~userId, ~phoneNumber), 
        !MNOAccount($U, ~userId, ~initialUserName, ~initialUserPhoneNumber, ~userSecureContact)
    ]
    --[ Eq(<$M,  ~phoneNumber>, <$U, ~initialUserPhoneNumber>), AttentiveMask($M, ~phoneNumber) ]->
    [
        MaskPerform($M, ~userId, ~phoneNumber, 'CALL_CUSTOMER_SERVICE_REPRESENTATIVE')
    ]

rule AnswerAttentive[colour=#AC8BDB]:
    let
        answers = correctAnswer(question(phoneNumber, ~seedK))
    in
    [
        MaskReactant(M, userId, phoneNumber, question), 
        !HumanMask(M, userId, phoneNumber), 
        In(~seedK)
    ]
    --[ Eq(question, question(phoneNumber, ~seedK)), AnswerAttentiveAttentiveMask(M, phoneNumber) ]->
    [
        MaskPerform(M, userId, phoneNumber, <question, answers>)
    ]

#ifdef SOCIALAUTH

rule secureContactAttentive[colour=#9F2B68]:
    let
        getPin = getSentPin(userSecureContactMessage)
    in
    [
        !MNOAccount(U, userId, userName, phoneNumber, userSecureContacts), 
        !HumanMask($N, ~secureId, userSecureContact),
        In_S($N,$S,userSecureContactMessage)
    ]
    --[ Eq(userSecureContacts, userSecureContact), AttentiveMask($N, userSecureContact) ]->
    [
        MaskReactant(U, userId, phoneNumber, <'is_this_your_pin', getPin>)
    ]

rule userAttentiveAnswersSecureContact[colour=#AC8BDB]:
    [
        !MNOAccount(U, userId, userName, phoneNumber, userSecureContact), 
        MaskReactant(U, userId, phoneNumber, <action, pinICCID>), 
        !HumanMask($M, ~userId1, initialUserPhoneNumber),
        UserCreatedRequest(userId, phoneNumber, <seedK, pinICCID1, newICCID>)
    ]
    --[ Eq(action, 'is_this_your_pin'), Eq(pinICCID1, pinICCID), 
        Eq(<$M,  phoneNumber>, <U, initialUserPhoneNumber>),  
        Eq(<$M,  ~userId1>, <U, userId>), AttentiveMask($M, phoneNumber)
    ]->
    [
        MaskReactant(U, userId, userSecureContact, <'accept_this_pin', pinICCID>)
    ]

rule acceptUserPINAttentive[colour=#9F2B68]:
    [ 
        MaskReactant($N, userId, userSecureContact, <action, ~pinICCID>), 
        !HumanMask($N, ~secureId, userSecureContacts)
    ]
    --[ Eq('accept_this_pin', action), Eq(userSecureContacts, userSecureContact) ]->
    [
        MaskPerform($N, ~secureId, userSecureContacts, <'confirms_pin', ~pinICCID>)
    ]

#endif







